#include <bits/stdc++.h>
using namespace std;
 
#define fi first
#define se second
#define mp(x,y) make_pair(x,y)
#define fore(i,a,b) for (int i=a,ThxDem=b;i<ThxDem;i++)
#define ford(i,a,b) for (int i=a-1,ThxDem=b;i>=ThxDem;i--)
#define pb push_back
#define all(s) s.begin(),s.end()
#define rall(s) s.rbegin(),s.rend()
 #define prec(n) fixed<<setprecision(n)
typedef unsigned long long ull;
typedef long long ll;
const ll MAXN= 200005;
typedef pair<int,int> pii;
typedef pair<ll, ll> pll;
typedef vector<int> vi;
typedef vector<ll> vl;
typedef vector<pll> vll;
typedef vector<pii> vii;
typedef vector<string> vs;
#define show(x) cout << (#x) << " is " << (x) << endl
const ll mod= 1e9+7;
#define out(x) cout << x 
#define yes cout<<"YES"<<endl
#define no  cout<<"NO"<<endl
#define minpq(s) priority_queue<int, vector<int>, greater<int>> = s;
#define bit(i,j) ((i>>j) & 1)
// __gcd(n,0) = n;
#define see(x) cout << #x << " = " << x << ' '
#define seen(x) cout << #x << " = " << x << '\n'
 
            //(////(/((//#//%%%&&&&&&&&&%%%%%%##############((/,,,,*((((((((((((#######(#%####
            //////////(//(//%#######&%#%%%%%%%%&%%##########(,,,,,(((((((((((#########%%######
            ///////////////#%%######%#########%%&%#########(,,,,*/(#/(((##(#########%#########
            //#######%%%%###########%############%%%%%%%%%/,,/((###((#####((/(#/##%###########
            //%%%%###%%%%%%%%#########################%#(#########################%%%%%%%%%%##
            //((######&&%%%%%%%#####((#((####(#(##%%%%%%%###########%%###(%%%%%%#############%
            //########&%&&&%%%%%%%%%%&&&&&&&&&&&&&%%#%%%%%#%%%%%%%%%%#########%%%%%%#%(##(((((
            //%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%##%%%%#(((///**////((#%%%%%%#(#####
            //%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#%%%%%%%#(#%&%#(//////*/**/////((##(%%#######
            //%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#%%%%%&%#(#%%%(////****////*////(((##(%####(((
            //###############&(#################(%%%%&&#%(%%#((//**/*//*//////*///((#(%%##((((
            //###############%###############(((%%%%%&%((%%##/////////////////////(((#(%####((
            //#%%%%&&&%&%%%%%#%%%##%%#%######(*%%%%%%#((#%&%%####%##((//////(((######%(%###(//
            //&%&%%&&&&%%%%%%(%%&&&%%%%%%%%#/,/%%&&%%//#%%(((((((((((((////((((((((((##%#/,*,/
            //*/**,****((####((###(((*********#%#%%#(//(#%#%%(#%%(#((((///(((#(%%%(%#(*##((/((
            ///*//*****%%(#(#(#((#(((*******,(#&&###(/(((#(((((((((((///*/((((((((((((/%%#%###
            //**///**%%&%####(#((((%%%**(,,##(//#&((((((#(//////////*///**//((((//(((((%%%#%%%
            //*////*///*,,*#(&&&&&%%%/#*,,***/*////((/(((#/////////(///****/(///////((%%%%%%%%
            //*,,*****/(/****,*,,,*,***,,*******///**/((#((//////((//////////////////(#%#%%%%%
            //***,*,,*,*///***,*,/****,,,*,,**/**//*/#(//((/////(///(((((((((///////((###((/(#
            //,,,,,,**,,*////***//((**,,,**,****/*/(/((#((#(((((%((((#((/((//((((///((((###(//
            //,,,****,*,,*****/*(//*******,*****,//////(//#(((((///#####%#%#(%(///(#((((((((((
            //***********//////(/*/(**********/*///%%%/////(((/(////(((((((#(///((////(((((/,,
            //***/*//////**/*/*/%///****/////****/%%%%**//((////(//////((#///////(//#((###(//*
            //,*,*******///(//####///*(///////***(((#((/////((////(#((#////*/***/**/**********
            //,*,,******/*/((((((/*,**/*******/*****((//////////////#/****//(/*****(/(####(#(/
            //,,,,*********,*////(*,***********/***////////////////******/%#((//***/*(####((#(
            //***,********/**///((*,*************(//*////////////******************/*//*******
            //*/*,********(***,**/****///*///(#%%%#*/**/////////*//**************/*/*/****,***
            //*,,,*,,,****,,*****/*/*,********%%%%%#//////////////////********/((//***,*******
            //,,,,**,*********/***,*,**********%####%#*//***//////////////*****#(#///******,**
            //(*,,****//((#**************,******#####(#**/***/*///////////////**(/(/**********
 
 
 const ll MULTI_TESTS = 0;
   // here
   bool cmp(const pll &a,const pll &b)
   {
        return a.se > b.se  ;   
   }
 
   void solve()
{
   ll n, ans= 0;
   ll maxfi = 0, tmp;
   vector<pll> v(200008) ;
   cin >> n;
   fore(i,0,n)
   {
        cin >> v[i].fi >> v[i].se ;
        ans = max( ans, v[i].fi * v[i].se ) ;
        if(v[i].fi > v[i].se)
            swap(v[i].fi , v[i].se) ;
   }
   sort(all(v), cmp) ;
   fore(i,0,n)
   {
        tmp = 2 * v[i].se * min(maxfi , v[i].fi) ;
        ans = max(ans, tmp) ;
        maxfi = max(maxfi, v[i].fi) ;
 
   }
 
   if(ans&1)
    cout << ans/2 << ".5";
   else
    cout << ans/2<<".0" ;
}  
 
 
   // main
 
 signed main()
{
    std::ios::sync_with_stdio(false);
    cin.tie(0);cout.tie(0);
    if (MULTI_TESTS)
    {
        ll Q;
        cin >> Q;
        while (Q--) 
   {
            solve();
        }
    } 
    else 
    {
            solve();
    }
    return 0;
}